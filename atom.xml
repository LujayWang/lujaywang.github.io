<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LujayWang&#39;s Blog</title>
  
  
  <link href="https://lujaywang.github.io/atom.xml" rel="self"/>
  
  <link href="https://lujaywang.github.io/"/>
  <updated>2021-09-06T09:11:28.024Z</updated>
  <id>https://lujaywang.github.io/</id>
  
  <author>
    <name>Lujay Wang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Redis学习笔记(一）</title>
    <link href="https://lujaywang.github.io/2021/09/05/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80%EF%BC%89/"/>
    <id>https://lujaywang.github.io/2021/09/05/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80%EF%BC%89/</id>
    <published>2021-09-05T06:21:03.000Z</published>
    <updated>2021-09-06T09:11:28.024Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>❝</p><p>Redis（Remote Dictionary Server )，即远程字典服务，是一个开源的使用ANSI <a href="https://baike.baidu.com/item/C%E8%AF%AD%E8%A8%80">C语言</a>编写、支持网络、可基于内存亦可持久化的日志型、Key-Value<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93/103728">数据库</a>，并提供多种语言的API。本文Redis相关命令基于Linux CentOs 8系统</p><p>❞</p></blockquote><h1 id="一、如何将redis在后台启动？"><a href="#一、如何将redis在后台启动？" class="headerlink" title="一、如何将redis在后台启动？"></a>一、如何将redis在后台启动？</h1><p><img src="A58B5780-2071-4CBF-AA3E-3B81838A4F36.png"></p><p>将redis的配置文件redis.conf的daemonize设置为yes再启动即可；也可以拷贝redis.conf文件，然后在修改拷贝的文件，<kbd>redis-server 拷贝后文件地址</kbd>命令指定新的配置文件地址。</p><h1 id="二、redis压力测试"><a href="#二、redis压力测试" class="headerlink" title="二、redis压力测试"></a>二、redis压力测试</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-benchmark -h 127.0.0.1 -p 6379 -c 50 -n 10000</span><br></pre></td></tr></table></figure><div align=left><img src=707331-20180201145503750-901697180.png /></div><h2 id="三、Linux远程服务器上的redis怎么在本地通过可视化软件-Medis-Redist-Manager-Desktop-进行连接访问？"><a href="#三、Linux远程服务器上的redis怎么在本地通过可视化软件-Medis-Redist-Manager-Desktop-进行连接访问？" class="headerlink" title="三、Linux远程服务器上的redis怎么在本地通过可视化软件(Medis, Redist Manager Desktop)进行连接访问？"></a>三、Linux远程服务器上的redis怎么在本地通过可视化软件(Medis, Redist Manager Desktop)进行连接访问？</h2><blockquote><p>1）去服务器安全组将对应的端口号放开</p><p>2）将端口的防火墙打开，并重启防火墙</p><p>​      firewall-cmd –permanent –add-port=6379/tcp</p><p>​      firwall-cmd –reload 或者 systemctl restart firewalld.service</p><p>3）还是不行的，查看redis配置文件上的bind 127.0.0.1是否注释掉，protected-mode是否设置为no</p></blockquote><h1 id="四、常用命令"><a href="#四、常用命令" class="headerlink" title="四、常用命令"></a>四、常用命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@LujayWang bin]<span class="comment"># redis-cli -p 6379  #进入redis客户端</span></span><br><span class="line">127.0.0.1:6379&gt; ping                     <span class="comment">#判断是否连接成功</span></span><br><span class="line">PONG</span><br><span class="line">127.0.0.1:6379&gt; select 1 <span class="comment">#选择redis数据库，一共有16个，从0开始</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379[1]&gt; <span class="built_in">set</span> name <span class="string">&quot;wangqiwei&quot;</span> <span class="comment">#redis是以key-value键值对进行存储的，设置key为name的值为&quot;wangqiwei&quot;</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379[1]&gt; get name <span class="comment">#获取key值为name的值</span></span><br><span class="line"><span class="string">&quot;wangqiwei&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; keys * <span class="comment">#查看所有键</span></span><br><span class="line">1) <span class="string">&quot;name&quot;</span></span><br><span class="line">127.0.0.1:6379[1]&gt; select 0 <span class="comment">#第0号数据库为默认数据库</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; flushdb <span class="comment">#清空当前数据库的数据</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; flushall <span class="comment">#清空所有数据库的数据</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys *  <span class="comment">#查看所有键</span></span><br><span class="line">(empty list or <span class="built_in">set</span>)</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> name wangqiwei</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">type</span> name <span class="comment">#查看某个key值的数据类型</span></span><br><span class="line">string</span><br><span class="line">127.0.0.1:6379&gt; exists name <span class="comment">#查看是否有存在名字为name的key，有返回1，没有返回0</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; exists name1</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379&gt; expire name 10 <span class="comment">#设置name的过期时间为10s</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; ttl name <span class="comment">#查看key还有多久过期，整数表示还剩多少s过期，负数表示已过期</span></span><br><span class="line">(<span class="built_in">integer</span>) 5</span><br><span class="line">127.0.0.1:6379&gt; ttl name</span><br><span class="line">(<span class="built_in">integer</span>) -2</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(empty list or <span class="built_in">set</span>)</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>：Redis是单线程的！</p></blockquote><h1 id="五、Redis数据类型"><a href="#五、Redis数据类型" class="headerlink" title="五、Redis数据类型"></a>五、Redis数据类型</h1><h2 id="1-String字符串类型"><a href="#1-String字符串类型" class="headerlink" title="1.String字符串类型"></a>1.String字符串类型</h2><h3 id="1）常用字符串操作"><a href="#1）常用字符串操作" class="headerlink" title="1）常用字符串操作"></a>1）常用字符串操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">################################</span></span><br><span class="line">127.0.0.1:6379&gt; flushdb </span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(empty array)</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> key1 hello</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get key1</span><br><span class="line"><span class="string">&quot;hello&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; append key1 ,redis        <span class="comment">#向key1中追加字符串，返回值追加后的字符串长度</span></span><br><span class="line">(<span class="built_in">integer</span>) 11</span><br><span class="line">127.0.0.1:6379&gt; get key1</span><br><span class="line"><span class="string">&quot;hello,redis&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; strlen key1<span class="comment">#获取key1字符串的长度</span></span><br><span class="line">(<span class="built_in">integer</span>) 11</span><br><span class="line">127.0.0.1:6379&gt; append key2 lujaywang     <span class="comment">#如果append的key不存在，则会创建该key，值为追加的字符</span></span><br><span class="line">(<span class="built_in">integer</span>) 9</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">&quot;key2&quot;</span></span><br><span class="line">2) <span class="string">&quot;key1&quot;</span></span><br><span class="line"><span class="comment">##################################</span></span><br></pre></td></tr></table></figure><h3 id="2）操作数值型数据"><a href="#2）操作数值型数据" class="headerlink" title="2）操作数值型数据"></a>2）操作数值型数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##################################</span></span><br><span class="line">127.0.0.1:6379&gt; flushdb</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(empty array)</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> value 0</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get value</span><br><span class="line"><span class="string">&quot;0&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">type</span> value <span class="comment">#redis中的数值还是以字符串形式存储的，但不影响对其进行操作</span></span><br><span class="line">string</span><br><span class="line">127.0.0.1:6379&gt; incr value<span class="comment">#对value的值加一，类似i++</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; incr value</span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line">127.0.0.1:6379&gt; decr value<span class="comment">#对value的值减一，累死</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; decr value</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379&gt; incrby value 10<span class="comment">#对value的值加10，最后一个参数为步长，类似i += 10</span></span><br><span class="line">(<span class="built_in">integer</span>) 10</span><br><span class="line">127.0.0.1:6379&gt; incrby value 10</span><br><span class="line">(<span class="built_in">integer</span>) 20</span><br><span class="line">127.0.0.1:6379&gt; decrby value 10<span class="comment">#对value的值减10，最后一个参数为步长，累死i -= 10</span></span><br><span class="line">(<span class="built_in">integer</span>) 10</span><br><span class="line">127.0.0.1:6379&gt; decrby value 10</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line"><span class="comment">####################################</span></span><br></pre></td></tr></table></figure><h3 id="3）字符操作扩展"><a href="#3）字符操作扩展" class="headerlink" title="3）字符操作扩展"></a>3）字符操作扩展</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">####################################</span></span><br><span class="line">127.0.0.1:6379&gt; flushdb</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(empty array)</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> str hello,redis</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get str</span><br><span class="line"><span class="string">&quot;hello,redis&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; getrange str 1 3<span class="comment">#获取字符串索引1到3的字符串，类似于java中substring操作</span></span><br><span class="line"><span class="string">&quot;ell&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; getrange str 0 -1<span class="comment">#获取全部字符串，-1代表最后</span></span><br><span class="line"><span class="string">&quot;hello,redis&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; setrange str 1 haha<span class="comment">#将索引为1后面的&#x27;haha&#x27;长度字符串替换为&#x27;haha&#x27;，类似于java中replace操作</span></span><br><span class="line">(<span class="built_in">integer</span>) 11</span><br><span class="line">127.0.0.1:6379&gt; get str</span><br><span class="line"><span class="string">&quot;hhaha,redis&quot;</span></span><br><span class="line"><span class="comment">####################################</span></span><br></pre></td></tr></table></figure><h3 id="4）设置获取字符串扩展"><a href="#4）设置获取字符串扩展" class="headerlink" title="4）设置获取字符串扩展"></a>4）设置获取字符串扩展</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">####################################</span></span><br><span class="line">127.0.0.1:6379&gt; flushdb</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(empty array)</span><br><span class="line">127.0.0.1:6379&gt; setex key1 15 hahahaha <span class="comment">#set expire合并简写，创建key:value并设置过期时间,如果key已存在则修改值并设置过期时间</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get key1</span><br><span class="line"><span class="string">&quot;hahahaha&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; ttl key1</span><br><span class="line">(<span class="built_in">integer</span>) 7</span><br><span class="line">127.0.0.1:6379&gt; ttl key1</span><br><span class="line">(<span class="built_in">integer</span>) -2</span><br><span class="line">127.0.0.1:6379&gt; get key1</span><br><span class="line">(nil)</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(empty array)</span><br><span class="line">127.0.0.1:6379&gt; setnx key2 xixixi<span class="comment">#set if not exit简写，如果不存在就创建key:value,存在就不会进行创建和修改值</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; get key2</span><br><span class="line"><span class="string">&quot;xixixi&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; setnx key2 hehehe</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379&gt; get key2</span><br><span class="line"><span class="string">&quot;xixixi&quot;</span></span><br><span class="line"><span class="comment">####################################</span></span><br></pre></td></tr></table></figure><h3 id="5）组合操作"><a href="#5）组合操作" class="headerlink" title="5）组合操作"></a>5）组合操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">####################################</span></span><br><span class="line">127.0.0.1:6379&gt; flushdb</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(empty array)</span><br><span class="line">127.0.0.1:6379&gt; mset key1 a key2 b key3 c  <span class="comment">#同时对key1,key2,key3进行赋值</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; mget key1 key2 key3 <span class="comment">#同时获取key1,key2,key3的值</span></span><br><span class="line">1) <span class="string">&quot;a&quot;</span></span><br><span class="line">2) <span class="string">&quot;b&quot;</span></span><br><span class="line">3) <span class="string">&quot;c&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; msetnx key1 d key4 d <span class="comment">#如果key1,key4都不存在，则设置key1,key4的值；有一个存在，则都不进行设置；具有原子性，要么一起成功，要么一起失败！</span></span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379&gt; mget key1 key4</span><br><span class="line">1) <span class="string">&quot;a&quot;</span></span><br><span class="line">2) (nil)</span><br><span class="line">127.0.0.1:6379&gt; msetnx key4 3 key5 2</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; mget key4 key5</span><br><span class="line">1) <span class="string">&quot;3&quot;</span></span><br><span class="line">2) <span class="string">&quot;2&quot;</span></span><br><span class="line"><span class="comment">####################################</span></span><br></pre></td></tr></table></figure><h3 id="6）对象操作"><a href="#6）对象操作" class="headerlink" title="6）对象操作"></a>6）对象操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">####################################</span></span><br><span class="line">127.0.0.1:6379&gt; flushdb</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(empty array)</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> user <span class="string">&quot;&#123;name:&#x27;wangqiwei&#x27;,age:18&#125;&quot;</span>   <span class="comment">#设置json字符串的方式</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> user:name wangqiwei                <span class="comment">#设置key值的方式分别设置，单个字段或者字段不多的情况下推荐使用</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> user:age 18                        <span class="comment">#设置key值的方式分别设置</span></span><br><span class="line">OK</span><br></pre></td></tr></table></figure><h2 id="2-List列表类型"><a href="#2-List列表类型" class="headerlink" title="2.List列表类型"></a>2.List列表类型</h2><h2 id="3-Set集合类型"><a href="#3-Set集合类型" class="headerlink" title="3.Set集合类型"></a>3.Set集合类型</h2><h2 id="4-Hash哈希类型"><a href="#4-Hash哈希类型" class="headerlink" title="4.Hash哈希类型"></a>4.Hash哈希类型</h2><h2 id="5-Zset有序集合类型"><a href="#5-Zset有序集合类型" class="headerlink" title="5.Zset有序集合类型"></a>5.Zset有序集合类型</h2><h2 id="6-Geospatial地理位置"><a href="#6-Geospatial地理位置" class="headerlink" title="6.Geospatial地理位置"></a>6.Geospatial地理位置</h2><h2 id="7-Hyperloglog基数统计"><a href="#7-Hyperloglog基数统计" class="headerlink" title="7.Hyperloglog基数统计"></a>7.Hyperloglog基数统计</h2><h2 id="8-Bitmap位图场景"><a href="#8-Bitmap位图场景" class="headerlink" title="8.Bitmap位图场景"></a>8.Bitmap位图场景</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;❝&lt;/p&gt;
&lt;p&gt;Redis（Remote Dictionary Server )，即远程字典服务，是一个开源的使用ANSI &lt;a href=&quot;https://baike.baidu.com/item/C%E8%AF%AD%E8%A8%80&quot;&gt;C语</summary>
      
    
    
    
    <category term="后端开发" scheme="https://lujaywang.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    <category term="数据库" scheme="https://lujaywang.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="后端" scheme="https://lujaywang.github.io/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="redis" scheme="https://lujaywang.github.io/tags/redis/"/>
    
    <category term="noSql" scheme="https://lujaywang.github.io/tags/noSql/"/>
    
  </entry>
  
  <entry>
    <title>MySQL你真的会了吗？</title>
    <link href="https://lujaywang.github.io/2021/09/04/MySQL%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BC%9A%E4%BA%86%E5%90%97%EF%BC%9F/"/>
    <id>https://lujaywang.github.io/2021/09/04/MySQL%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BC%9A%E4%BA%86%E5%90%97%EF%BC%9F/</id>
    <published>2021-09-04T08:44:09.000Z</published>
    <updated>2021-09-06T07:19:24.777Z</updated>
    
    
    
    
    <category term="后端开发" scheme="https://lujaywang.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    <category term="数据库" scheme="https://lujaywang.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="后端" scheme="https://lujaywang.github.io/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="MySQL" scheme="https://lujaywang.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令大全</title>
    <link href="https://lujaywang.github.io/2021/09/04/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
    <id>https://lujaywang.github.io/2021/09/04/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</id>
    <published>2021-09-04T06:07:29.000Z</published>
    <updated>2021-09-06T07:27:13.119Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>❝</p><p>Linux其实是前后端都必会的技能，前端目前很多童鞋都再走大前端路线，后端就更不用说了，小编通过学习B站上的狂神老师的<a href="https://www.bilibili.com/video/BV187411y7hF?p=1">Linux最通俗易懂的教程</a>学习了相关的命令并对其进行整理，可以说这些都是必须掌握的，当然这些也是不够的，后面小编还会在之后的工作生活中继续整理更新，大家可以关注我的动态，盘起来，这波可以收藏起来了。</p><p>❞</p></blockquote><h1 id="一、目录相关命令"><a href="#一、目录相关命令" class="headerlink" title="一、目录相关命令"></a>一、目录相关命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls [选项]... [文件]... <span class="comment">#查看当前目录</span></span><br></pre></td></tr></table></figure><p>常用选项：</p><p>-a： all，查看所有文件，包括隐藏文件</p><p>-l：列出所有的文件包括隐藏文件，ls -l可以简写成ll</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> [选项] [目录路径] <span class="comment">#跳转到某个目录</span></span><br></pre></td></tr></table></figure><p>目录路径分位相对路径和绝对路径</p><p>相对路径：以/开头。例如：/usr/local</p><p>绝对路径：以./或者../开头，./代表当前目录，../代表当前目录所在的目录。例如：./usr,../usr</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">pwd</span> <span class="comment">#查看当前文件所在目录</span></span><br><span class="line">$ mkdir <span class="built_in">test</span> <span class="comment">#创建一个目录</span></span><br><span class="line">$ mkdir test1/test2/test3 <span class="comment">#test1，test2目录必须存在，否则会报错</span></span><br><span class="line">$ mkdir -p test1/test2/test3 <span class="comment">#可以递归创建目录，test1，test2目录可以不存在  </span></span><br><span class="line">$ rmdir <span class="built_in">test</span> <span class="comment">#删除test目录</span></span><br><span class="line">$ rmdir test1/test2 <span class="comment">#报错，不能删除不为空的目录</span></span><br><span class="line">$ rmdir -p test1/test2 <span class="comment">#可以递归删除目录，⚠️test1下必须只有test2目录不能有其他文件或者目录</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp [选项] 文件1 文件2 <span class="comment">#拷贝文件1到文件2</span></span><br></pre></td></tr></table></figure><p>常用选项：</p><p>-r：recursive，递归复制</p><p>-f：force，强制复制，遇到相同文件不会提示直接进行覆盖</p><p>-i：互动，复制时会提示是否复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm [选项] 文件或者目录 <span class="comment">#删除文件或者目录</span></span><br></pre></td></tr></table></figure><p>常用选项：</p><p>-r：recursive，递归删除</p><p>-f：force，强制删除，遇到相同文件不会提示直接进行删除</p><p>-i：互动，删除时提示是否删除</p><blockquote><p><strong>警告⚠️</strong>：不要尝试使用<kbd>rm -rf /</kbd>命令，会删除所有的文件及目录，即我么常说的删库跑路。</p></blockquote><h1 id="二、文件属性查看及修改"><a href="#二、文件属性查看及修改" class="headerlink" title="二、文件属性查看及修改"></a>二、文件属性查看及修改</h1><p> 通过ll和ls -l查看当前目录的文件属性<img src="./images/2CF9F03C-F7E5-479F-AB13-55BFC3117EB6.png" alt="image"></p><p>每行第一个字母</p><p>[d]代表目录，directory；</p><p>[-]代表文件；</p><p>[l]代表链接，link。</p><p>另外九个字符分别为三中不同用户组的权限，每三个为一组，分别代表可读可写可执行，三中用户组分别为root用户组，普通用户和游客用户组，其他用户组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ chmod [-R] 权限 文件或者目录 <span class="comment">#修改文件或者目录的权限</span></span><br><span class="line">$ chown [-R] lujaywang 文件或者目录 <span class="comment">#修改文件目录的属主及所有者owner，上图第三个字段</span></span><br><span class="line">$ chgrp [-R] root 文件或者目录 <span class="comment">#修改文件的属组及group，上图第四个字段</span></span><br></pre></td></tr></table></figure><p>chmod的权限由三个0，1，2，3，5，7之间数字组成，例如：777，分别代表三个不同的用户组的三个权限，每个数字转换成三位的二进制，例如：1代表001，3代表011，7代表111。三个数字分别代表rwx及可读可写可执行，0代表没有权限即”-“，1代表有权限。</p><p>321：-wx-w–x</p><p>777：rwxrwxrwx</p><p>537：r-x-wxrwx</p><h1 id="三、文件的查看"><a href="#三、文件的查看" class="headerlink" title="三、文件的查看"></a>三、文件的查看</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cat [-n] 文件 <span class="comment">#查看文件全部内容，加上-n会显示行号</span></span><br><span class="line">$ tac 文件 <span class="comment">#从后往前显示文件全部内容</span></span><br><span class="line">$ nl 文件 <span class="comment">#相当于cat -n 文件，显示全部内容加上行号</span></span><br><span class="line">$ more 文件 <span class="comment">#显示部分内容，enter键显示更多行，空格键分页，会显示当前内容占全部的比例</span></span><br><span class="line">$ less 文件 <span class="comment">#显示部分内容，空格键分页，↑↓键上下查看内容，但是不会显示当前内容占全部的比例</span></span><br><span class="line">$ head [-n number] 文件 <span class="comment">#显示头上内容，有-n显示头上number行，没有默认显示10行数据</span></span><br><span class="line">$ tail [-n number] 文件 <span class="comment">#显示尾上内容，有-n显示尾上number行，没有默认显示10行数据</span></span><br></pre></td></tr></table></figure><p>创建文件的方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ touch 文件名 <span class="comment">#创建文件</span></span><br><span class="line">$ vi / vim  文件名 <span class="comment">#通过vi或者和vim方式创建文件</span></span><br></pre></td></tr></table></figure><h1 id="四、硬链接和软链接"><a href="#四、硬链接和软链接" class="headerlink" title="四、硬链接和软链接"></a>四、硬链接和软链接</h1><p>硬链接：指向文件，文件删除了，硬链接还是可以打开，放在重要文件上，防止误删；</p><p>软连接：指向文件，文件删除，软连接也失效了，相当于windows上的快捷方式。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ touch f1 <span class="comment">#创建f1文件</span></span><br><span class="line">$ ln f1 f2 <span class="comment">#创建硬链接f2，命令：ln 文件 链接名</span></span><br><span class="line">$ ln -s f1 f3 <span class="comment">#创建软链接f3，加上-s代表创建软连接</span></span><br></pre></td></tr></table></figure><p>三个文件不管哪个文件内容发生改变，另外两个文件内容也会发生改变。</p><p>f1删除之后，f3也会失效不能读取，f2还可以读取。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;❝&lt;/p&gt;
&lt;p&gt;Linux其实是前后端都必会的技能，前端目前很多童鞋都再走大前端路线，后端就更不用说了，小编通过学习B站上的狂神老师的&lt;a href=&quot;https://www.bilibili.com/video/BV187411y7hF?p=1</summary>
      
    
    
    
    <category term="后端开发" scheme="https://lujaywang.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Linux" scheme="https://lujaywang.github.io/tags/Linux/"/>
    
    <category term="后端" scheme="https://lujaywang.github.io/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Nginx学习总结(一)</title>
    <link href="https://lujaywang.github.io/2021/09/02/Nginx%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%E4%B8%80/"/>
    <id>https://lujaywang.github.io/2021/09/02/Nginx%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%E4%B8%80/</id>
    <published>2021-09-02T12:14:44.000Z</published>
    <updated>2021-09-06T07:23:01.763Z</updated>
    
    <content type="html"><![CDATA[<p>个人Nginx学习过程问题及收获</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;个人Nginx学习过程问题及收获&lt;/p&gt;
</summary>
      
    
    
    
    <category term="后端开发" scheme="https://lujaywang.github.io/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="后端" scheme="https://lujaywang.github.io/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="Nginx" scheme="https://lujaywang.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github搭建个人博客平台</title>
    <link href="https://lujaywang.github.io/2021/09/02/Hexo+Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0/"/>
    <id>https://lujaywang.github.io/2021/09/02/Hexo+Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0/</id>
    <published>2021-09-02T08:12:38.275Z</published>
    <updated>2021-09-06T03:50:05.036Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
    <category term="Hexo" scheme="https://lujaywang.github.io/tags/Hexo/"/>
    
    <category term="Github" scheme="https://lujaywang.github.io/tags/Github/"/>
    
  </entry>
  
</feed>
